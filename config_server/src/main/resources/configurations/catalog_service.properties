# Eureka Client Configuration
eureka.instance.hostname=localhost
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# Server Configuration
server.port=8091

# Spring Application Name
spring.application.name=catalog_service

# DataSource Configuration
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://ecommercedb.c25xj0lpmeiu.us-east-2.rds.amazonaws.com:3306/ecommercedb
spring.datasource.username=admin
spring.datasource.password=Ecommerce4413!

#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://db.c2m2hsf2mn6d.us-east-1.rds.amazonaws.com:3306/db
#spring.datasource.username=admin
#spring.datasource.password=12345678

#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/ecommtrial
#spring.datasource.username=root
#spring.datasource.password=12345678

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database=mysql
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#denotes that communication from catalog to user is internal and not through api gateway
application.config.user-url=http://localhost:8090/ecommerce/user
application.config.auction-url=http://localhost:8092/ecommerce/auction

#denotes that communication from catalog to user is external and through api gateway
#good but also makes tracing communication path b/w services more complex as it goes cat-api-user-cat
#instead of cat-user-cat
#application.config.user-url=http://localhost:8222/ecommerce/user