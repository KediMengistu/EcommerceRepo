services:
  database:
    # Configuration for Amazon RDS database
    # Replace placeholders with actual configuration for Amazon RDS
    image: mysql:5.7  # MySQL 5.7 image
    ports:
      - "3306:3306"  # Map container port to host
    environment:
      MYSQL_ROOT_PASSWORD: Ecommerce4413!
      MYSQL_DATABASE: ecommercedb
      MYSQL_USER: admin
      MYSQL_PASSWORD: Ecommerce4413!
    volumes:
      - db_data:/var/lib/mysql  # Persist data to a volume

  configserver:
    build:
      context: ./config_server  # Path to the directory containing the Dockerfile
      dockerfile: Dockerfile  # Name of the Dockerfile
    ports:
      - "8888:8888"
    container_name: configserver
    depends_on:
     - database
    networks:
     - my-spring-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://ecommercedb.c25xj0lpmeiu.us-east-2.rds.amazonaws.com:3306/ecommercedb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=Ecommerce4413!
    volumes:
      - shared_data:/shared

  discovery:
    build:
      context: ./discovery  # Path to the directory containing the Dockerfile
      dockerfile: Dockerfile  # Name of the Dockerfile
    ports:
      - "8761:8761"
    container_name: discovery
    volumes:
      - shared_data:/shared

  api_gateway:
    build:
      context: ./api_gateway  # Path to the directory containing the Dockerfile
      dockerfile: Dockerfile  # Name of the Dockerfile
    ports:
      - "8222:8222"  # Map container port to host
    container_name: api_gateway
    volumes:
      - shared_data:/shared
    # Other necessary settings for api_gateway service

  auctionservice:
    build:
      context: ./auction_service  # Path to the directory containing the Dockerfile
      dockerfile: Dockerfile  # Name of the Dockerfile
    ports:
      - "8092:8092"
    container_name: auctionservice
    depends_on:
      - database
    networks:
      - my-spring-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://ecommercedb.c25xj0lpmeiu.us-east-2.rds.amazonaws.com:3306/ecommercedb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=Ecommerce4413!
    volumes:
      - shared_data:/shared

  catalogservice:
    build:
      context: ./catalog_service  # Path to the directory containing the Dockerfile
      dockerfile: Dockerfile  # Name of the Dockerfile
    ports:
      - "8091:8091"
    container_name: catalogservice
    depends_on:
      - database
    networks:
      - my-spring-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://ecommercedb.c25xj0lpmeiu.us-east-2.rds.amazonaws.com:3306/ecommercedb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=Ecommerce4413!
    volumes:
      - shared_data:/shared

  userservice:
    build:
      context: ./user_service  # Path to the directory containing the Dockerfile
      dockerfile: Dockerfile  # Name of the Dockerfile
    ports:
      - "8090:8090"
    container_name: userservice
    depends_on:
      - database
    networks:
      - my-spring-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://ecommercedb.c25xj0lpmeiu.us-east-2.rds.amazonaws.com:3306/ecommercedb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=Ecommerce4413!
    volumes:
      - shared_data:/shared

  paymentservice:
    build:
      context: ./payment_service  # Path to the directory containing the Dockerfile
      dockerfile: Dockerfile  # Name of the Dockerfile
    ports:
      - "8093:8903"
    container_name: paymentservice
    depends_on:
      - database
    networks:
      - my-spring-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://ecommercedb.c25xj0lpmeiu.us-east-2.rds.amazonaws.com:3306/ecommercedb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=Ecommerce4413!
    volumes:
      - shared_data:/shared


networks:
  my-spring-network:
    name: my-spring-network
volumes:
  db_data:
    name: RDSdatabase
  shared_data:
    name: ecommerceservices